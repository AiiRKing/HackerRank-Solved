#!/bin/python3

######Code_1######
import sys, re

T = sys.stdin.read().splitlines()
T = [T[1:] if len(T)<90 else T[1:91]][0]

UID = re.compile(
    r"(?!.*(.).*\1)"
    r"(?=^[a-zA-Z0-9]{10}$)"
    r"(?=(.*[A-Z].*){2,})"
    r"(?=(.*\d.*){3,})"
)

for line in T:
    if UID.search(line):
        print('Valid')
    else:
        print('Invalid')

######Code_2#######
import re

if __name__ == "__main__":
    t = int(input().strip())
    
    for _ in range(t):
        uid = "".join(sorted(input()))
        if (len(uid) == 10 and
            re.match(r'', uid) and 
            re.search(r'[A-Z]{2}', uid) and
            re.search(r'\d\d\d', uid) and
            not re.search(r'[^a-zA-Z0-9]', uid) and
            not re.search(r'(.)\1', uid)):
            print("Valid")
        else:
            print("Invalid")

######Code_3######
import re

for _ in range(int(input())):

    uid = input()

    # It must contain at least 2 uppercase English alphabet characters.
    c1 = len(re.findall(r"[A-Z]", uid)) >= 2

    # It must contain at least 3 digits (0-9).
    c2 = len(re.findall(r"[0-9]{3}", uid)) >= 3

    # It should only contain alphanumeric characters (a-z, A-Z & 0-9).
    c3 = len(re.findall(r"[a-zA-Z0-9]", uid)) == len(uid)

    # No character should repeat.
    c4 = len(set(uid)) == len(uid)

    # There must be exactly 10 characters in a valid UID.
    c5 = len(uid) == 10

    # must be valid all conditions
    print('Valid' if all([c1, c2, c3, c4, c5]) else 'Invalid')
######Code_4######

#!/bin/python2

import re

t = int(raw_input())

for _ in xrange(t):

    uid = raw_input()

    # It must contain at least 2 uppercase English alphabet characters.
    c1 = len(re.findall(r"[A-Z]", uid)) >= 2

    # It must contain at least 3 digits (0-9).
    c2 = len(re.findall(r"[0-9]", uid)) >= 3

    # It should only contain alphanumeric characters (a-z, A-Z & 0-9).
    c3 = len(re.findall(r"[a-zA-Z0-9]", uid)) == len(uid)

    # No character should repeat.
    c4 = len(set(uid)) == len(uid)

    # There must be exactly 10 characters in a valid UID.
    c5 = len(re.findall(r".", uid)) == 10

    # must be valid all conditions
    if c1 and c2 and c3 and c4 and c5:
        print 'Valid'
    else:
        print 'Invalid'

####end####
