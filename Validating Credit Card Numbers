#!/bin/python3

A valid credit card from ABCD Bank has the following characteristics:

► It must start with a 4, 5 or 6.
► It must contain exactly 16 digits.
► It must only consist of digits (0-9).
► It may have digits in groups of 4, separated by one hyphen "-".
► It must NOT use any other separator like ' ' , '_', etc.
► It must NOT have 4 or more consecutive repeated digits. 
###################################################################

import re

def is_valid(card_nr: str) -> bool:
    if not re.match(r'[456]\d{3}(-?\d{4}){3}$', card_nr):
        return False
    return not any(re.finditer(r'(.)\1{3}', card_nr.replace("-", "")))
    

if __name__ == "__main__":
    for _ in range(int(input())):
        print("Valid" if is_valid(input()) else "Invalid")

############# Code_1###############

import re

class Main:
    def __init__(self):
        self.test = re.compile(r'^(?!.*(\d)(-?\1){3})[456]\d{3}(?:-?\d{4}){3}$')
        for _ in range(int(input())):
            self.s = input()
            print("Valid" if self.test.search(self.s) else "Invalid")
            
            
if __name__ == '__main__':
    obj = Main()
###################### Code_2###################
import re


for _ in range(int(input())):
    num = input()

    ok1 = bool(re.match(r"^[456]\d{15}$", num))
    ok2 = bool(re.match(r"^[456]\d{3}\-\d{4}\-\d{4}\-\d{4}$", num))
    num = num.replace("-", "")
    ok3 = bool(re.match(r"(?!.*(\d)(-?\1){3})", num))
    if (ok1 or ok2) and ok3:
        print("Valid")
    else:
        print("Invalid")





